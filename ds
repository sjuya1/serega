xml

<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.example</groupId>
    <artifactId>DataBase</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <maven.compiler.source>20</maven.compiler.source>
        <maven.compiler.target>20</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>42.7.4</version>
        </dependency>
    </dependencies>


</project>



db conn

package data;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;

public interface DbConnection {
    default Connection connect(){
        try {
            Class.forName("org.postgresql.Driver");
            Connection connection = DriverManager.getConnection(
                    "jdbc:postgresql://localhost:5432/users_db",
                    "postgres",
                    "admin"
            );

            System.out.println("Connection succcesed!");

            return connection;
        } catch (ClassNotFoundException | SQLException e) {
            System.out.println("Connection failed. Please, try again later.");

            return null;
        }
    }
    void select();
    void insertUser(User user);
    void update();
    void delete();
}




user

package data;

public class User {
    private String id;
    private String lastname;
    private String firstname;
    private String patronymic;
    private String login;
    private String password;
    private String post;
    private double salary;

    public User(String surname, String lastName, String name, String password, String job) {
        this.id = "1"; //TODO() - generate id
        this.login = "user"; //TODO() - generate login
        this.lastname = surname;
        this.patronymic = lastName;
        this.firstname = name;
        this.password = password;
        this.post = job;
    }

    public String getId() {
        return id;
    }

    public String getLastname() {
        return lastname;
    }

    public void setLastname(String lastname) {
        this.lastname = lastname;
    }

    public String getPatronymic() {
        return patronymic;
    }

    public void setPatronymic(String patronymic) {
        this.patronymic = patronymic;
    }

    public String getFirstname() {
        return firstname;
    }

    public void setFirstname(String firstname) {
        this.firstname = firstname;
    }

    public String getLogin() {
        return login;
    }

    public void setLogin(String login) {
        this.login = login;
    }

    public String getPassword() {
        return password;
    }

    public void setPassword(String password) {
        this.password = password;
    }

    public String getPost() {
        return post;
    }

    public void setPost(String post) {
        this.post = post;
    }

    public double getSalary() {
        return salary;
    }

    public void setSalary(double salary) {
        this.salary = salary;
    }
}

dbmpl

package data;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

public class DbConnectionImpl implements DbConnection{
    @Override
    public void select() {
        try {
            String request = "SELECT * FROM public.users";
            Statement statement = connect().createStatement();
            ResultSet resultSet = statement.executeQuery(request);

            while (resultSet.next()) {
                var id = resultSet.getLong("id");
                var username = resultSet.getString("username");
                var password= resultSet.getString("password");


                System.out.println("ID - " + id + ", username - " + username + ", password - " + password);
            }
        } catch (SQLException e) {
            System.out.println("Cannot load data from db. Please try again.");
        }

    }

    @Override
    public void insertUser(User user) {
        try {
            var request = "INSERT INTO " +
                    "public.users(id, firstname, lastname, patronymic, login, password, post, salary) " +
                    "VALUES(?, ?, ?, ?, ?, ?, ?, ?)";

            var connection = connect();

            var prepareStatement = connection.prepareStatement(request);

            prepareStatement.setString(1, user.getId());
            prepareStatement.setString(2, user.getFirstname());
            prepareStatement.setString(3, user.getLastname());
            prepareStatement.setString(4, user.getPatronymic());
            prepareStatement.setString(5, user.getLogin());
            prepareStatement.setString(6, user.getPassword());
            prepareStatement.setString(7, user.getPost());
            prepareStatement.setDouble(8, user.getSalary());

            prepareStatement.executeUpdate();

            System.out.println("Data inserted successfully!");

        } catch (SQLException e) {
            System.out.println("Data insertion failed. Please, try again!");
            System.out.println(e);
        }
    }


    @Override
    public void update() {

    }

    @Override
    public void delete() {

    }
}




app

package app;

import data.DbConnectionImpl;
import data.User;

public class App {
    public static void main(String[] args) {
        DbConnectionImpl dbConnection = new DbConnectionImpl();

        var user = new User("ght", "thg", "hgt", "1234567", "manager");
        dbConnection.insertUser(user);
    }

}
