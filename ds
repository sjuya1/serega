

import java.util.*;

public class EmployeeAuthorizationSystem {

    private static final Map<String, Employee> employees = new HashMap<>();

    public static void main(String[] args) {
        // Добавление тестовых данных
        employees.put("E-000001", new Employee("Кошкин Виталий Андреевич", "Инженер", 70000, "koshkin.v.a", "пароль"));
        employees.put("A-100987", new Employee("Соболев Леонид Леонидович", "Администратор", 60000, "sobolev.l.l", "пароль"));
        employees.put("M-425007", new Employee("Иванов Иван Иванович", "Менеджер", 50000, "ivanov.i.i", "пароль"));
        employees.put("S-000000", new Employee("admin admin admin", "superuser", 0, "admin", "/admin1234"));

        Scanner scanner = new Scanner(System.in);

        while (true) {
            System.out.println("Введите команду (вход, регистрация, выход): ");
            String command = scanner.nextLine();

            if (command.equals("вход")) {
                login();
            } else if (command.equals("регистрация")) {
                register();
            } else if (command.equals("выход")) {
                break;
            } else {
                System.out.println("Неизвестная команда.");
            }
        }
    }

    private static void login() {
        Scanner scanner = new Scanner(System.in);

        System.out.println("Введите логин: ");
        String login = scanner.nextLine();

        System.out.println("Введите пароль: ");
        String password = scanner.nextLine();

        Employee employee = employees.get(login);
        if (employee == null || !employee.getPassword().equals(password)) {
            System.out.println("Неверный логин или пароль.");
            return;
        }

        System.out.println("Успешный вход.");
        System.out.println(getGreetingMessage(employee.getName(), Integer.parseInt(scanner.nextLine())));

        if (employee.getPosition().equals("Инженер")) {
            System.out.println("Ваш доход: " + employee.getSalary() + " рублей.");
        } else if (employee.getPosition().equals("Менеджер")) {
            System.out.println("Ваш доход: " + employee.getSalary() + " рублей.");
            System.out.println("Доходы сотрудников:");
            for (Employee otherEmployee : employees.values()) {
                if (otherEmployee.getPosition().equals("Инженер")) {
                    System.out.println(otherEmployee.getName() + ": " + otherEmployee.getSalary() + " рублей.");
                }
            }
        } else if (employee.getPosition().equals("Администратор")) {
            System.out.println("Ваш доход: " + employee.getSalary() + " рублей.");
            System.out.println("Данные сотрудников:");
            for (Employee otherEmployee : employees.values()) {
                System.out.println(otherEmployee.getId() + ": " + otherEmployee.getName() + ", " + otherEmployee.getPosition() + ", " + otherEmployee.getSalary() + " рублей, логин: " + otherEmployee.getLogin() + ", пароль: " + otherEmployee.getPassword());
            }
        } else if (employee.getPosition().equals("superuser")) {
            System.out.println("Добро пожаловать, superuser!");
        }
    }

    private static void register() {
        Scanner scanner = new Scanner(System.in);

        System.out.println("Введите ФИО: ");
        String name = scanner.nextLine();

        System.out.println("Введите должность (Инженер, Менеджер, Администратор): ");
        String position = scanner.nextLine();

        System.out.println("Введите пароль: ");
        String password = scanner.nextLine();

        String login = name.toLowerCase().replace(" ", ".").replace(",", ".");
        String id = position.substring(0, 1) + "-" + String.format("%06d", employees.size() + 1);

        employees.put(id, new Employee(name, position, position.equals("Инженер") ? (int) (Math.random() * (100000 - 70000) + 70000) : position.equals("Менеджер") ? (int) (Math.random() * (90000 - 50000) + 50000) : (int) (Math.random() * (120000 - 60000) + 60000), login, password));

        System.out.println("Регистрация прошла успешно.");


    }

    private static String getGreetingMessage(String name, int timeOfDay) {
        if (timeOfDay >= 4 && timeOfDay < 12) {
            return "Доброе утро, " + name + "!";
        } else if (timeOfDay >= 12 && timeOfDay < 17) {
            return "Добрый день, " + name + "!";
        } else if (timeOfDay >= 17 && timeOfDay < 22) {
            return "Добрый вечер, " + name + "!";
        } else {
            return "Доброй ночи, " + name + "!";
        }
    }

    private static class Employee {

        private String name;
        private String position;
        private int salary;
        private String login;
        private String password;

        public Employee(String name, String position, int salary, String login, String password) {
            this.name = name;
            this.position = position;
            this.salary = salary;
            this.login = login;
            this.password = password;
        }

        public String getName() {
            return name;
        }

        public String getPosition() {
            return position;
        }

        public int getSalary() {
            return salary;
        }

        public String getLogin() {
            return login;
        }

        public String getPassword() {
            return password;
        }

        public String getId() {
            return position.substring(0, 1) + "-" + String.format("%06d", employees.size() + 1);
        }
    }
}


//        **Инструкция по тестированию программы:**
//
//        1. Клонируйте репозиторий с программой с GitHub: `git clone https://github.com/your-username/employee-authorization-system`.
//        2. Установите Java 8 или выше.
//        3. Перейдите в каталог с программой: `cd employee-authorization-system`.
//        4. Скомпилируйте программу: `javac EmployeeAuthorizationSystem.java`.
//        5. Запустите программу: `java EmployeeAuthorizationSystem`.
//        6. Выберите команду "вход" или "регистрация" и следуйте инструкциям на экране.
